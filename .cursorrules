# Nomad List - 디지털 노마드 도시 정보 플랫폼

## 프로젝트 개요
이 프로젝트는 디지털 노마드들을 위한 도시 정보 플랫폼입니다. 각 도시의 생활비, 인터넷 속도, 기온, 전체 점수 등의 정보를 제공하며, 대륙별 필터링 기능을 포함합니다.

## 기술 스택
- **Framework**: Next.js 14 (App Router)
- **Language**: TypeScript
- **Styling**: Tailwind CSS v4
- **UI Components**: shadcn/ui (Radix UI 기반)
- **Icons**: Lucide React
- **Fonts**: Geist Sans & Geist Mono
- **Analytics**: Vercel Analytics

## 프로젝트 구조

### 디렉토리 구조
```
nomad-list/
├── app/                    # Next.js App Router
│   ├── globals.css        # 전역 스타일
│   ├── layout.tsx         # 루트 레이아웃
│   └── page.tsx           # 홈페이지
├── components/            # React 컴포넌트
│   ├── ui/               # shadcn/ui 컴포넌트들
│   ├── city-grid.tsx     # 도시 그리드 컴포넌트
│   ├── continent-filter.tsx # 대륙 필터 컴포넌트
│   ├── hero-section.tsx  # 히어로 섹션
│   ├── footer.tsx        # 푸터
│   └── theme-provider.tsx # 테마 프로바이더
├── hooks/                # 커스텀 훅
├── lib/                  # 유틸리티 함수
├── public/               # 정적 파일
│   └── city/            # 도시 이미지들
└── scripts/             # 유틸리티 스크립트
```

## 코딩 규칙

### 1. TypeScript 사용
- 모든 컴포넌트와 함수에 적절한 타입 정의
- 인터페이스는 PascalCase로 명명
- 타입 정의는 파일 상단에 위치

### 2. 컴포넌트 구조
- 모든 컴포넌트는 "use client" 지시어 사용 (클라이언트 컴포넌트)
- 컴포넌트는 함수형 컴포넌트로 작성
- Props 인터페이스는 컴포넌트 바로 위에 정의

### 3. 스타일링 규칙
- Tailwind CSS 클래스 사용
- shadcn/ui 컴포넌트 우선 사용
- 반응형 디자인 고려 (md:, lg:, xl: 브레이크포인트)
- 다크모드 지원을 위한 CSS 변수 활용

### 4. 데이터 구조
- 도시 데이터는 City 인터페이스로 정의
- 대륙 타입은 Continent 유니온 타입으로 정의
- 모든 도시 데이터는 city-grid.tsx에 하드코딩

### 5. 네이밍 컨벤션
- 컴포넌트: PascalCase (예: CityGrid, HeroSection)
- 파일명: kebab-case (예: city-grid.tsx, hero-section.tsx)
- 변수/함수: camelCase
- 상수: UPPER_SNAKE_CASE

### 6. 이미지 처리
- 도시 이미지는 /public/city/ 디렉토리에 저장
- 이미지 포맷: JPG, WebP 지원
- alt 텍스트는 한국어로 작성

### 7. 접근성
- 모든 이미지에 적절한 alt 속성
- 시맨틱 HTML 태그 사용
- 키보드 네비게이션 지원

### 8. 성능 최적화
- 이미지 최적화 (Next.js Image 컴포넌트 고려)
- 컴포넌트 메모이제이션 필요시 React.memo 사용
- 불필요한 리렌더링 방지

## 주요 컴포넌트 설명

### CityGrid
- 도시 목록을 카드 형태로 표시
- 대륙별 필터링 기능
- 각 도시의 생활비, 인터넷 속도, 기온 정보 표시
- 호버 효과와 애니메이션 포함

### ContinentFilter
- 대륙별 필터링 버튼 제공
- 선택된 대륙에 따른 시각적 피드백
- 부드러운 스크롤 애니메이션

### HeroSection
- 메인 히어로 섹션
- 배경 이미지와 오버레이
- CTA 버튼과 스크롤 인디케이터

## 개발 가이드라인

### 새로운 도시 추가
1. city-grid.tsx의 cities 배열에 새 도시 객체 추가
2. /public/city/ 디렉토리에 해당 도시 이미지 추가
3. City 인터페이스에 맞는 모든 필드 입력

### 새로운 기능 추가
1. 기존 컴포넌트 구조 유지
2. TypeScript 타입 정의 우선
3. 반응형 디자인 고려
4. 접근성 가이드라인 준수

### 스타일 수정
1. Tailwind CSS 클래스 우선 사용
2. shadcn/ui 컴포넌트 커스터마이징
3. CSS 변수를 통한 테마 지원
4. 모바일 우선 반응형 디자인

## 주의사항
- 모든 텍스트는 한국어로 작성
- 통화는 USD로 표시
- 온도는 섭씨(°C)로 표시
- 인터넷 속도는 Mbps로 표시
- 점수는 5점 만점 기준

## 빌드 및 배포
- Next.js 빌드 시스템 사용
- Vercel 배포 최적화
- 정적 파일 최적화
- SEO 메타데이터 포함
